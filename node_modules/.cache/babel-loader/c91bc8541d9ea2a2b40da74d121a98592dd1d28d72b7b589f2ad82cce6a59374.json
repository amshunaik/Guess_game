{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAmsh\\\\OneDrive\\\\Desktop\\\\Guess\\\\ggame\\\\src\\\\Game\\\\Part.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Part = () => {\n  _s();\n  const pp = useParams(); // Extracts \"pp\" from URL params\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const val = pp.id;\n        const response = await fetch(`http://localhost:3005/query?qry=${val}`);\n        const result = await response.json(); // Parse JSON response\n        setData(result.data);\n        console.log(result.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [pp]); // Dependency array ensures it runs when `pp` changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pp.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"loream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Part, \"C7GzjFYeooI+nthEYE/GYP9XuH8=\", false, function () {\n  return [useParams];\n});\n_c = Part;\nexport default Part;\nvar _c;\n$RefreshReg$(_c, \"Part\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Part","_s","pp","data","setData","fetchData","val","id","response","fetch","result","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/RAmsh/OneDrive/Desktop/Guess/ggame/src/Game/Part.js"],"sourcesContent":["import React, { useEffect ,useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nconst Part = () => {\r\n    const pp  = useParams(); // Extracts \"pp\" from URL params\r\n    \r\n    const [data, setData] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const val=pp.id\r\n          const response = await fetch(`http://localhost:3005/query?qry=${val}`);\r\n          const result = await response.json(); // Parse JSON response\r\n          setData(result.data);\r\n          console.log(result.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, [pp]); // Dependency array ensures it runs when `pp` changes\r\n  \r\n  return (\r\n    <div>\r\n        <h1>{pp.id}</h1>\r\n        <h2>loream\r\n            \r\n        </h2>\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Part\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,EAAE,GAAIL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEzB,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAACJ,EAAE,CAACK,EAAE;QACf,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCH,GAAG,EAAE,CAAC;QACtE,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;QACtCP,OAAO,CAACM,MAAM,CAACP,IAAI,CAAC;QACpBS,OAAO,CAACC,GAAG,CAACH,MAAM,CAACP,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEZ,oBACEH,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAKb,EAAE,CAACK;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBpB,OAAA;MAAAgB,QAAA,EAAI;IAEJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGJ,CAAC;AAEV,CAAC;AAAAlB,EAAA,CA/BKD,IAAI;EAAA,QACMH,SAAS;AAAA;AAAAuB,EAAA,GADnBpB,IAAI;AAiCV,eAAeA,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}