{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAmsh\\\\OneDrive\\\\Desktop\\\\Guess\\\\ggame\\\\src\\\\Game\\\\Part.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Part.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Part = () => {\n  _s();\n  const nav = useNavigate();\n  const pp = useParams(); // Extracts \"pp\" from URL params\n  const dispatch = useDispatch();\n  const val = pp.id;\n  const [data, setData] = useState(null);\n  const [cityN, setcityN] = useState(null);\n  const [score, setscore] = useState(0);\n  const [newgame, setnewgame] = useState(0);\n  const [anslvl, setanslvl] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [correctans, setcorrectans] = useState(null);\n  const Totalscore = useSelector(state => state.totscore);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3005/query`);\n        const result = await response.json(); // Parse JSON response\n        const cityNames = result.map(m => m.city); // Extract city names\n        setData(result[val]);\n        setcityN(cityNames);\n        setcorrectans(result[val].city);\n        console.log(result, cityN);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [pp]); // Dependency array ensures it runs when `pp` changes\n\n  const Choosed = a => {\n    setSelectedAnswer(option);\n    if (a == data.city) {\n      setscore(prev => {\n        return prev + 10;\n      });\n      console.log(\"Correct ans choosen\");\n      setanslvl(true);\n    } else {\n      if (anslvl == false) {\n        setscore(prev => {\n          return prev + -10;\n        });\n      }\n      console.log(\"Wrong ans choosen\");\n      setanslvl(false);\n    }\n  };\n  const Replay = () => {\n    setscore(0);\n  };\n  const Nextpart = () => {\n    var lgth = 11;\n    var a = Math.floor(Math.random() * lgth);\n    console.log(a);\n    dispatch({\n      type: 'updated',\n      val: score\n    });\n    setscore(0);\n    setnewgame(prev => {\n      return prev + 1;\n    });\n    console.log(Totalscore);\n    nav(`/part/${a}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pp.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data ? data.clues.slice(0, 3).map((clue, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: clue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cityN ? cityN.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedAnswer(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), anslvl == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Fun Facts about \", data.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), data.fun_fact.map((val, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: val\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Trivia's : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), data.trivia.map((val, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: val\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Replay,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Nextpart,\n        className: \"next-button\",\n        disabled: selectedAnswer !== correctans,\n        children: \"Next button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Part, \"bOfjf2CV9qjSejkJrO5eXN5hJMw=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector];\n});\n_c = Part;\nexport default Part;\nvar _c;\n$RefreshReg$(_c, \"Part\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Part","_s","nav","pp","dispatch","val","id","data","setData","cityN","setcityN","score","setscore","newgame","setnewgame","anslvl","setanslvl","selectedAnswer","setSelectedAnswer","correctans","setcorrectans","Totalscore","state","totscore","fetchData","response","fetch","result","json","cityNames","map","m","city","console","log","error","Choosed","a","option","prev","Replay","Nextpart","lgth","Math","floor","random","type","children","fileName","_jsxFileName","lineNumber","columnNumber","clues","slice","clue","index","onClick","fun_fact","trivia","className","disabled","_c","$RefreshReg$"],"sources":["C:/Users/RAmsh/OneDrive/Desktop/Guess/ggame/src/Game/Part.js"],"sourcesContent":["import React, { useEffect ,useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Part.css'\r\nconst Part = () => {\r\n    const nav=useNavigate();\r\n    const pp  = useParams(); // Extracts \"pp\" from URL params\r\n    const dispatch=useDispatch();\r\n    const val=pp.id\r\n    const [data, setData] = useState(null);\r\n    const [cityN, setcityN] = useState(null);\r\n    const [score,setscore]=useState(0);\r\n    const [newgame,setnewgame]=useState(0);\r\n    const [anslvl,setanslvl]=useState(false);\r\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n    const [correctans,setcorrectans]=useState(null);\r\n\r\n    const Totalscore=useSelector(state=>state.totscore);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:3005/query`);\r\n          const result = await response.json(); // Parse JSON response\r\n          const cityNames = result.map((m) => m.city); // Extract city names\r\n          setData(result[val]);\r\n          setcityN(cityNames)\r\n          setcorrectans(result[val].city)\r\n          console.log(result,cityN)\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, [pp]); // Dependency array ensures it runs when `pp` changes\r\n\r\n    const Choosed=(a)=>{\r\n        setSelectedAnswer(option)\r\n        if(a==data.city){\r\n            \r\n            setscore((prev)=>{return (prev+10)})\r\n            console.log(\"Correct ans choosen\");\r\n            setanslvl(true);\r\n\r\n        }\r\n        else{\r\n            if(anslvl==false){\r\n                setscore((prev)=>{return (prev+-10)})\r\n            }\r\n            console.log(\"Wrong ans choosen\");\r\n            setanslvl(false);\r\n        }\r\n\r\n    }\r\n    const Replay=()=>{\r\n        setscore(0);\r\n\r\n    }\r\n    const Nextpart=()=>{\r\n        \r\n        var lgth=11;\r\n        var a=Math.floor(Math.random()*lgth);\r\n        console.log(a);\r\n        dispatch({type:'updated',val:score})\r\n        setscore(0);\r\n        setnewgame(prev=>{return prev+1});\r\n        console.log(Totalscore);\r\n        nav(`/part/${a}`)\r\n    }\r\n  \r\n  return (\r\n    <div>\r\n        <h1>{pp.id}</h1>\r\n        <ul>\r\n            {data? data.clues.slice(0,3).map((clue, index) => (\r\n              <li key={index}>{clue}</li>\r\n            )):<></>}\r\n        </ul>\r\n\r\n        <div>\r\n            {cityN? cityN.map((option)=>(\r\n                <button\r\n                key={option}\r\n                onClick={() => setSelectedAnswer(option)}\r\n                \r\n              >\r\n                {option}\r\n              </button>\r\n            )):<></>}\r\n        </div>\r\n\r\n        {anslvl==true?<div>\r\n            <h2>Fun Facts about {data.city}</h2>\r\n            {data.fun_fact.map((val, index) => (\r\n              <li key={index}>{val}</li>\r\n            ))}\r\n\r\n            <h2>Trivia's : </h2>\r\n            {data.trivia.map((val, index) => (\r\n              <li key={index}>{val}</li>\r\n            ))}\r\n\r\n\r\n        </div>:<></>}\r\n\r\n\r\n        <div>\r\n            <button onClick={Replay}>Play Again</button>\r\n            <button onClick={Nextpart} className=\"next-button\" disabled={selectedAnswer !== correctans}>Next button</button>\r\n        </div>\r\n\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Part\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}